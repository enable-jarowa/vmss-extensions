upstream enable-auth-${regionPostFix} {
    server ${hostLB}:8000;
}
upstream enable-api-${regionPostFix} {
    server ${hostLB}:8001;
}

upstream enable-apiadmin-${regionPostFix} {
    server ${hostLB}:8002;
}

upstream enable-chathub-${regionPostFix} {
    server ${hostLB}:8010;
}

upstream enable-orion-${regionPostFix} {
    server ${hostLB}:8008;
}

upstream enable-insights-api-${regionPostFix} {
    server ${hostLB}:8051;
}

upstream enable-insights-apiadmin-${regionPostFix} {
    server ${hostLB}:8052;
}

upstream enable-mira-claimsflow-${regionPostFix} {
    server mira-claimsflow-${postFix}.dmz-${env}.enable.jarowa.net:443;
}

# clammit only for v4 clouds, not v3
#upstream enable-clammit-${regionPostFix} {
#    server 127.0.0.1:8438; # match listen url in /etc/clammit.conf
#}

# Have a special CSP header for the paths that include pspdfkit library that does unsafe-eval:
map $request_uri $csp_header_${region} {
  default "default-src 'self'; script-src 'self' https://maps.googleapis.com https://*.jarowa.net; style-src 'unsafe-inline' 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com; object-src 'none'; base-uri 'self'; connect-src 'self' https://maps.googleapis.com blob:; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self'; img-src 'self' data: blob: https://cdn.enable.jarowa.ch https://maps.googleapis.com https://maps.gstatic.com; manifest-src 'self'; media-src 'self'; worker-src blob: data:;";
  "~^.*/(auth|pspdfkit-lib|packageManager|workOrderDetail|workOrderSummary|videoChat).*$" "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://maps.googleapis.com https://*.jarowa.net; style-src 'unsafe-inline' 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com; object-src 'none'; base-uri 'self'; connect-src 'self' https://pspdfkit-license-service-1.com https://maps.googleapis.com blob: https://*.jarowa.net; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self' https://*.jarowa.net; img-src 'self' data: blob: https://cdn.enable.jarowa.ch https://maps.googleapis.com https://maps.gstatic.com; manifest-src 'self'; media-src 'self'; worker-src blob: data:;";
}

server {
    access_log /opt/bitnami/nginx/logs/${regionPostFix}-access.log main;
    error_log /opt/bitnami/nginx/logs/${regionPostFix}-error.log;

    listen [::]:443 ssl http2;
    listen      443 ssl http2;

    server_name  ${vServerName};

    ssl_certificate /opt/bitnami/nginx/conf/bitnami/certs/${crtFileName};
    ssl_certificate_key /opt/bitnami/nginx/conf/bitnami/certs/${rsaFileName};
    ssl_trusted_certificate /opt/bitnami/nginx/conf/bitnami/certs/${crtFileName}.chain.pem;

    set $clusterType "${env}";
    set $maintenanceEnabled "false";
    set $adminDisabled "true";
    set $whitelistadminClusterType "$http_whitelistadmin:$clusterType";
    set $whitelistadminGeo "$is_admin_user:$clusterType";
    # disable admin for calls with special header
    if ($whitelistadminClusterType = "${whitelistAdminHeaderPwd}:${env}") {
       set $adminDisabled "false";
    }
    # disable admin for calls with special static header
    if ($whitelistadminClusterType = "${whitelistAdminHeaderStatic}:${env}") {
        set $adminDisabled "false";
    }
    # allow admins if not prod
    if ($clusterType != "prod") {
       set $adminDisabled "false";
    }
    # allow admins from a specific geo location
    if ($whitelistadminGeo = "1:prod") {
       set $adminDisabled "false";
    }

    # switch on maint window except special header
    if ($http_whitelistadmin != "${whitelistAdminHeaderPwd}") {
#      set $maintenanceEnabled "true"; # maintenance mode
    }
    # switch off maint window except special static header
    if ($http_whitelistadmin = "${whitelistAdminHeaderStatic}") {
      set $maintenanceEnabled "false";
    }

    ## https://gist.github.com/gavinhungry/7a67174c18085f4a23eb
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp521r1:secp384r1;
    #ssl_ciphers EECDH+AESGCM:EECDH+AES256;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-$';

    # reduce ssl caching to 2m: https://success.qualys.com/discussions/s/question/0D52L00004TntzWSAR/ssltest-protocol-details-session-resumption-caching-in-red-color
    ssl_session_cache shared:TLS:2m;
    ssl_session_cache shared:SSL:2m;
    ssl_session_timeout 2m;
    ssl_buffer_size 4k;
    
    ## https://crashtest-security.com/harden-tls-session-resumption/
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # we dont need a resolver - its defined in azure /etc/resolver.conf
    # resolver 1.1.1.1;
    resolver_timeout 10s;

    # Do not use 2048 (see SSLTEST rating guide)
    # we generated our own using: 
    ssl_dhparam /opt/bitnami/nginx/conf/bitnami/certs/dhparam.pem;

    # do not add this header because must be provided in every location
    # add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;

    # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

    location /error-pages {
        ssi on;
        internal; ## served only internal
        auth_basic off;
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;
        root /opt/bitnami/nginx/html;
    }
    # *.xversion for v3 cloud. do not copy for v4
    include server_blocks/${postFix}*.xversion;
    # .*.xversion for v4 cloud. do not copy for v3
    #include server_blocks/${postFix}.*.xversion;



    location /livehub {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,Content-Disposition';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-chathub-${regionPostFix};
    }

    location /auth/connect {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        # for POST SAML response https://ma.ttias.be/nginx-proxy-upstream-sent-big-header-reading-response-header-upstream/
        # and https://support.f5.com/csp/article/K43542013
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        ## add additional header for global platform
        proxy_set_header X-Forwarded-Host 'https://${vServerName}';

        proxy_pass https://enable-auth-${regionPostFix};
    }

    location /auth/.well-known {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        # for POST SAML response https://ma.ttias.be/nginx-proxy-upstream-sent-big-header-reading-response-header-upstream/
        # and https://support.f5.com/csp/article/K43542013
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        ## add additional header for global platform
        proxy_set_header X-Forwarded-Host 'https://${vServerName}';

        proxy_pass https://enable-auth-${regionPostFix};
    }

    location /auth {
        if ($maintenanceEnabled = "true" ){
            rewrite ^ https://www.jarowa.ch/maintenance;
            return 503;
        }
        proxy_set_header HOST $host;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For $http_forwarded_for;
 
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        # for POST SAML response https://ma.ttias.be/nginx-proxy-upstream-sent-big-header-reading-response-header-upstream/
        # and https://support.f5.com/csp/article/K43542013
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        # CSP header is needed https://content-security-policy.com/examples/
        proxy_hide_header 'Content-Security-Policy';
        add_header Content-Security-Policy $csp_header_${region};

        ## add additional header for global platform, not for v3
        proxy_set_header X-Forwarded-Host 'https://${vServerName}';

        proxy_pass https://enable-auth-${regionPostFix};
    }

    location /api {
        client_max_body_size 50M;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #proxy_intercept_errors ${prodOn};
        #if ($clusterType = "prod") {
        #    error_page 400 /error-pages/error400.json;
        #}

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header X-Version-FE $XVersionFE;
        add_header X-Version-OneFE $XVersionOneFE;
        #v3 has no Suffix in xversion variable, only for v4
        add_header X-Version-Config $XVersionConfig;

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-OneFE,X-Version-Config';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        if ($http_referer ~* ^https://${vServerName}/admin/swagger/index.html) {
            proxy_pass https://enable-apiadmin-${regionPostFix};
        }

        proxy_pass https://enable-api-${regionPostFix};
    }

    location /api/Integration {
        client_max_body_size 50M;
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #proxy_intercept_errors ${prodOn};
        #if ($clusterType = "prod") {
        #    error_page 400 /error-pages/error400.json;
        #}

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header X-Version-FE $XVersionFE;
        add_header X-Version-OneFE $XVersionOneFE;
        #v3 has no Suffix in xversion variable, only for v4
        add_header X-Version-Config $XVersionConfig;

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-OneFE,X-Version-Config';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        if ($http_referer ~* ^https://${vServerName}/admin/swagger/index.html) {
            proxy_pass https://enable-apiadmin-${regionPostFix};
        }

        proxy_pass https://enable-api-${regionPostFix};
    }

    location /apiadmin {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        add_header X-Version-FE $XVersionFE;
        add_header X-Version-OneFE $XVersionOneFE;
        #v3 has no Suffix in xversion variable, only for v4
        add_header X-Version-Config $XVersionConfig;

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-OneFE,X-Version-Config';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-apiadmin-${regionPostFix}/api;
    }

    location /admin/swagger {
        if ($adminDisabled = "true") {
		    return 403;
        }
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-apiadmin-${regionPostFix};
    }

    location /swagger {
        if ($adminDisabled = "true") {
		    return 403;
        }
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-api-${regionPostFix};
    }

    ## insights api

    location /insights/api {
        client_max_body_size 10M;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header X-Version-FE $XVersionFE;
        add_header X-Version-OneFE $XVersionOneFE;
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-OneFE,X-Version-Config';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        if ($http_referer ~* ^https://${vServerName}/insights/admin/swagger/index.html) {
            proxy_pass https://enable-insights-apiadmin-${regionPostFix};
        }

        proxy_pass https://enable-insights-api-${regionPostFix};
    }

    location /insights/swagger {
        if ($adminDisabled = "true") {
		    return 403;
        }
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-insights-api-${regionPostFix};
    }


    ## insights admin api

    location /insights/apiadmin {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        add_header X-Version-FE $XVersionFE;
        add_header X-Version-OneFE $XVersionOneFE;
        #v3 has no Suffix in xversion variable, only for v4
        add_header X-Version-Config $XVersionConfig;

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-OneFE,X-Version-Config';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-insights-apiadmin-${regionPostFix}/insights/api;
    }

    location /insights/admin/swagger {
        if ($adminDisabled = "true") {
		    return 403;
        }
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-insights-apiadmin-${regionPostFix};
    }


    ## mira api

    location /mira/api {
        client_max_body_size 10M;

        proxy_set_header HOST mira-claimsflow-${postFix}.dmz-${env}.enable.jarowa.net;
        proxy_set_header X-Forwarded-Proto https;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        proxy_pass https://enable-mira-claimsflow-${regionPostFix};
    }

    location /Orion {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        rewrite ^/Orion/(.*)$ /Orion/$1 break;
        proxy_pass https://enable-orion-${regionPostFix};
    }

    location /configStatic {
        proxy_intercept_errors on;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #v3 has no Suffix in xversion variable, only for v4
        add_header X-Version-Config $XVersionConfig;
        add_header Access-Control-Expose-Headers X-Version-Config;

        # fix http version - 505 HTTP Version Not Supported
        proxy_http_version 1.1;

        # NO caching for configStatic
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        expires off;
        etag off;
        add_header Last-Modified $date_gmt;

        proxy_hide_header ETag;
        proxy_hide_header Content-MD5;
        proxy_hide_header Last-Modified;
        proxy_hide_header Cache-Control;        
        add_header Last-Modified $date_gmt;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        rewrite ^/configStatic/(.*)$ /${postFix}/${regionConfigStatic}/$1 break;
        proxy_pass https://${vCDNWebServerNameInternalLink};
    }

    location /diagnostics-application-info.json {
        if ($maintenanceEnabled = "true" ){
            rewrite ^ https://www.jarowa.ch/maintenance;
            return 503;
        }
        # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
        proxy_intercept_errors on;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        # NO caching for configStatic
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        expires off;
        etag off;

        proxy_hide_header ETag;
        proxy_hide_header Content-MD5;
        proxy_hide_header Last-Modified;
        proxy_hide_header Cache-Control;        
        add_header Last-Modified $date_gmt;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

        # CSP header is needed https://content-security-policy.com/examples/
        proxy_hide_header 'Content-Security-Policy';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://maps.googleapis.com https://*.jarowa.net; style-src 'unsafe-inline' 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com; object-src 'none'; base-uri 'self'; connect-src 'self' https://maps.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self'; img-src 'self' data: blob: https://cdn.enable.jarowa.ch https://maps.googleapis.com https://maps.gstatic.com; manifest-src 'self'; media-src 'self'; worker-src blob: data:;";

        proxy_set_header HOST ${vWebServerName};
        proxy_pass https://${vWebServerNamePrivateLink};
    }

    location / {
        if ($maintenanceEnabled = "true" ){
            rewrite ^ https://www.jarowa.ch/maintenance;
            return 503;
        }
        # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
        proxy_intercept_errors on;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;
        ## https://webdock.io/en/docs/how-guides/security-guides/how-to-configure-security-headers-in-nginx-and-apache   
        proxy_hide_header X-Content-Type-Options;
        add_header X-Content-Type-Options "nosniff" always;
        proxy_hide_header X-Frame-Options;
        add_header X-Frame-Options "SAMEORIGIN" always;
        proxy_hide_header X-XSS-Protection;

        # CSP header is needed https://content-security-policy.com/examples/
        proxy_hide_header 'Content-Security-Policy';
        # This one is a bit more complicated as we need to relax the CSP policy for some sub-paths, see the mapping in the http context
        add_header Content-Security-Policy $csp_header_${region};

        proxy_set_header HOST ${vWebServerName};
        proxy_pass https://${vWebServerNamePrivateLink};
    }

    # mira frontends

    location /mira {
        if ($maintenanceEnabled = "true" ){
            rewrite ^ https://www.jarowa.ch/maintenance;
            return 503;
        }
        # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
        proxy_intercept_errors on;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

        proxy_set_header HOST mira-claimsflow-${postFix}.dmz-${env}.enable.jarowa.net;
        proxy_set_header X-Forwarded-Proto https;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;

        # CSP header is needed https://content-security-policy.com/examples/
        proxy_hide_header 'Content-Security-Policy';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://maps.googleapis.com https://*.jarowa.net; style-src 'unsafe-inline' 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com; object-src 'none'; base-uri 'self'; connect-src 'self' https://maps.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self'; img-src 'self' data: blob: https://cdn.enable.jarowa.ch https://maps.googleapis.com https://maps.gstatic.com; manifest-src 'self'; media-src 'self'; worker-src blob: data:;";

        index index.html;
        # fix http version - 505 HTTP Version Not Supported
        proxy_http_version 1.1;

        proxy_pass https://enable-mira-claimsflow-${regionPostFix};
    }

    # one frontend

    location /one {
        if ($maintenanceEnabled = "true" ){
            rewrite ^ https://www.jarowa.ch/maintenance;
            return 503;
        }
        # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
        proxy_intercept_errors on;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error-pages/error.html;

        proxy_set_header X-Forwarded-Proto $scheme;

        #strategy used if NO-firewall or firewall
        ${commentIfWaf}proxy_set_header X-Real-IP $remote_addr;
        ${commentIfWaf}proxy_set_header X-Forwarded-For $http_forwarded_for;

        #strategy used: if behind App-Gateway: header X-Forwarded-For is passed
        ${commentIfNotWaf}proxy_set_header X-Real-IP $http_x_forwarded_for;
        ${commentIfNotWaf}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ### we must redeclare the STS header because 'location' block contains another 'add_header' directive
        proxy_hide_header 'Strict-Transport-Security';
        ### and ensure to hide any headers from stream
        add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;

        # CSP header is needed https://content-security-policy.com/examples/
        proxy_hide_header 'Content-Security-Policy';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://maps.googleapis.com https://*.jarowa.net; style-src 'unsafe-inline' 'self' https://cdn.jsdelivr.net https://fonts.googleapis.com; object-src 'none'; base-uri 'self'; connect-src 'self' https://maps.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self'; img-src 'self' data: blob: https://cdn.enable.jarowa.ch https://maps.googleapis.com https://maps.gstatic.com; manifest-src 'self'; media-src 'self'; worker-src blob: data:;";

        index index.html;
        # fix http version - 505 HTTP Version Not Supported
        proxy_http_version 1.1;

        rewrite ^/one$ /one/ permanent;
        rewrite ^/one(\?.*)$ /one/ permanent;
        rewrite ^/one/$ /${postFix}/webStatic-one/index.html break;
        rewrite ^/one/(assets/.*)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one/(diagnostics-application-info.json)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one/(.*\.png)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one/(.*\.ico)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one/(index.html)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one/(index.html?.*)$ /${postFix}/webStatic-one/$1 break;
        rewrite ^/one(/.*)$ /${postFix}/webStatic-one/index.html?$1 break;

        proxy_pass https://${vCDNWebServerNameInternalLink};

    }


}

#server {
#    listen [::]:80;
#    listen      80;
#    server_name  ${vServerName};
#    rewrite ^ https://$host$request_uri? permanent;
#}

