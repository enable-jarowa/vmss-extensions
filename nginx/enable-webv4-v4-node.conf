upstream enable-auth-${regionPostFix} {
    server ${hostLB}:8000;
}
upstream enable-api-${regionPostFix} {
    server ${hostLB}:8001;
}

upstream enable-apiadmin-${regionPostFix} {
    server ${hostLB}:8002;
}

upstream enable-chathub-${regionPostFix} {
    server ${hostLB}:8010;
}

upstream enable-configui-${regionPostFix} {
    server ${hostLB}:8020;
}

upstream enable-orion-${regionPostFix} {
    server ${hostLB}:8008;
}

upstream enable-clammit-${regionPostFix} {
    server 127.0.0.1:8438; # match listen url in /etc/clammit.conf
}

server {
    access_log /opt/bitnami/nginx/logs/${regionPostFix}-access.log;
    error_log /opt/bitnami/nginx/logs/${regionPostFix}-error.log;

    listen [::]:443 ssl http2;
    listen      443 ssl http2;

    server_name  ${vServerName};

    ssl_certificate /opt/bitnami/nginx/conf/bitnami/certs/${crtFileName};
    ssl_certificate_key /opt/bitnami/nginx/conf/bitnami/certs/${rsaFileName};
    ssl_trusted_certificate /opt/bitnami/nginx/conf/bitnami/certs/${crtFileName}.chain.pem;

    #modsecurity on;
    #modsecurity_rules_file /etc/nginx/modsec/main.conf;

    ## https://gist.github.com/gavinhungry/7a67174c18085f4a23eb
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp521r1:secp384r1;
    #ssl_ciphers EECDH+AESGCM:EECDH+AES256;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-$';

    ssl_session_cache shared:TLS:2m;
    ssl_buffer_size 4k;
    ## https://crashtest-security.com/harden-tls-session-resumption/
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # we dont need a resolver - its defined in azure /etc/resolver.conf
    # resolver 1.1.1.1;
    resolver_timeout 10s;

    # Do not use 2048 (see SSLTEST rating guide)
    # we generated our own using: 
    ssl_dhparam /opt/bitnami/nginx/conf/bitnami/certs/dhparam.pem;

    add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload';

    include server_blocks/${postFix}.*.xversion;

    # this one has higher priority over the location /api
    location ~* /api/WorkOrders/.*/Documents {
        client_max_body_size 50M;
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';

        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';

        add_header X-Version-FE $XVersionFE;
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-Config';

        if ($http_referer ~* ^https://${vServerName}/admin/swagger/index.html) {
            proxy_pass https://enable-apiadmin-${regionPostFix};
        }

        if ($request_method = POST  ) {
            proxy_pass http://enable-clammit-${regionPostFix};
        }
        if ($request_method = PATCH  ) {
            proxy_pass http://enable-clammit-${regionPostFix};
        }
        proxy_pass https://enable-api-${regionPostFix};
    }

    location ~* /api/Files$ {
        client_max_body_size 50M;
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header X-Version-FE $XVersionFE;
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-Config';

        if ($http_referer ~* ^https://${vServerName}/admin/swagger/index.html) {
                proxy_pass https://enable-apiadmin-${regionPostFix};
        }

        if ($request_method = POST ) {
            proxy_pass http://enable-clammit-${regionPostFix};
        }
        proxy_pass https://enable-api-${regionPostFix};
    }

    location /livehub {
        proxy_pass https://enable-chathub-${regionPostFix};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /auth {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        ## add additional header for global platform
        proxy_set_header X-Forwarded-Host 'https://${vServerName}';

        proxy_pass https://enable-auth-${regionPostFix};
    }

    location /api {
        client_max_body_size 50M;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Methods' 'POST, PATCH, PUT, GET, OPTIONS, DELETE';
        add_header X-Version-FE $XVersionFE;
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-Config';

        if ($http_referer ~* ^https://${vServerName}/admin/swagger/index.html) {
            proxy_pass https://enable-apiadmin-${regionPostFix};
        }

        proxy_pass https://enable-api-${regionPostFix};
    }

    location /apiadmin {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        add_header X-Version-FE $XVersionFE;
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};

        ## remove the old header
        proxy_hide_header 'Access-Control-Expose-Headers';
        add_header 'Access-Control-Expose-Headers' 'Location,Upload-Offset,Upload-Length,X-Pagination,X-Version,Content-Disposition,X-Version-FE,X-Version-Config';

        proxy_pass https://enable-apiadmin-${regionPostFix}/api;
    }

    location /admin/swagger {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        proxy_pass https://enable-apiadmin-${regionPostFix};
    }

    location /swagger {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        proxy_pass https://enable-api-${regionPostFix};
    }

    location /ConfigTool {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        rewrite    ^/ConfigTool(/.*) $1 break;
        proxy_pass https://enable-configui-${regionPostFix};
    }

    location /Orion {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        rewrite ^/Orion/(.*)$ /Orion/$1 break;
        proxy_pass https://enable-orion-${regionPostFix};
    }

    location /configStatic {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header X-Version-Config $XVersionConfig${xVersionConfigRegion};
        add_header Access-Control-Expose-Headers X-Version-Config;

        # fix http version - 505 HTTP Version Not Supported
        proxy_http_version 1.1;

        # NO caching for configStatic
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        expires off;
        etag off;
        add_header Last-Modified $date_gmt;

        proxy_hide_header ETag;
        proxy_hide_header Content-MD5;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

        rewrite ^/configStatic/(.*)$ /${postFix}/${regionConfigStatic}/$1 break;
        proxy_pass http://${vCDNWebServerNamePrivateLink}:80;
    }

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        proxy_set_header HOST ${vWebServerName};
        proxy_pass https://${vWebServerNamePrivateLink};
    }
}

server {
    listen [::]:80;
    listen      80;
    server_name  ${vServerName};
    rewrite ^ https://$host$request_uri? permanent;
}

